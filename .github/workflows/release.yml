# .github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build binary
        run: make VERSION=${{ env.VERSION }} build

      - name: Package binary into a tar.gz archive
        run: |
          ARCHIVE_NAME="textfile-exporter-${{ env.VERSION }}-${{ runner.os }}-${{ runner.arch }}"
          tar -czvf "${ARCHIVE_NAME}.tar.gz" textfile-exporter LICENSE README.md
          echo "ARCHIVE_PATH=${ARCHIVE_NAME}.tar.gz" >> $GITHUB_ENV
          echo "ARCHIVE_FILENAME=${ARCHIVE_NAME}.tar.gz" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          commitish: ${{ github.sha }}
          generate_release_notes: true # <-- Magie de la génération automatique !

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ARCHIVE_PATH }}
          asset_name: ${{ env.ARCHIVE_FILENAME }}
          asset_content_type: application/gzip
